export class Colors {
  static Black1: string = '#FF000000';
  static Black2: string = '#E6000000';
  static Black3: string = '#B8000000';
  static Black4: string = '#8C000000';
  static Black5: string = '#66000000';
  static Black6: string = '#40000000';
  static Black7: string = '#1F000000';
  static Black8: string = '#0F000000';
  static White1: string = '#FFFFFFFF';
  static White2: string = '#EDFFFFFF';
  static White3: string = '#BFFFFFFF';
  static White4: string = '#8CFFFFFF';
  static White5: string = '#6BFFFFFF';
  static White6: string = '#4DFFFFFF';
  static White7: string = '#24FFFFFF';
  static GrayLight1: string = '#FFF9FAFC';
  static GrayLight2: string = '#FFF0F2F7';
  static GrayLight3: string = '#FFE6E9F0';
  static GrayLight4: string = '#FFD1D4DE';
  static GrayLight5: string = '#FFC0C3CC';
  static GrayLight6: string = '#FFB3B6BE';
  static GrayLight7: string = '#FFA5A9B0';
  static GrayDark1: string = '#FF131417';
  static GrayDark2: string = '#FF1F2024';
  static GrayDark3: string = '#FF2B2C30';
  static GrayDark4: string = '#FF3A3C42';
  static GrayDark5: string = '#FF48494F';
  static GrayDark6: string = '#FF54565C';
  static GrayDark7: string = '#FF646A70';
  static ThemeLight1: string = '#FFEBF3FF';
  static ThemeLight2: string = '#FFCCE2FF';
  static ThemeLight3: string = '#FFADCFFF';
  static ThemeLight4: string = '#FF7AAFFF';
  static ThemeLight5: string = '#FF4588F5';
  static ThemeLight6: string = '#FF1C66E5';
  static ThemeLight7: string = '#FF0D49BF';
  static ThemeLight8: string = '#FF033099';
  static ThemeLight9: string = '#FF001F73';
  static ThemeLight10: string = '#FF00124D';
  static ThemeDark1: string = '#FF1C2333';
  static ThemeDark2: string = '#FF243047';
  static ThemeDark3: string = '#FF2F4875';
  static ThemeDark4: string = '#FF305BA6';
  static ThemeDark5: string = '#FF2B6AD6';
  static ThemeDark6: string = '#FF4086FF';
  static ThemeDark7: string = '#FF5C9DFF';
  static ThemeDark8: string = '#FF78B0FF';
  static ThemeDark9: string = '#FF9CC7FF';
  static ThemeDark10: string = '#FFC2DEFF';
  static GreenLight1: string = '#FFDCFAE9';
  static GreenLight2: string = '#FFB6F0D1';
  static GreenLight3: string = '#FF84E3B5';
  static GreenLight4: string = '#FF5AD69E';
  static GreenLight5: string = '#FF3CC98C';
  static GreenLight6: string = '#FF0ABF77';
  static GreenLight7: string = '#FF09A768';
  static GreenLight8: string = '#FF078F59';
  static GreenLight9: string = '#FF067049';
  static GreenLight10: string = '#FF044D37';
  static GreenDark1: string = '#FF1A2620';
  static GreenDark2: string = '#FF22352C';
  static GreenDark3: string = '#FF2F4F3F';
  static GreenDark4: string = '#FF377355';
  static GreenDark5: string = '#FF368F65';
  static GreenDark6: string = '#FF38A673';
  static GreenDark7: string = '#FF62B58B';
  static GreenDark8: string = '#FF8BC7A9';
  static GreenDark9: string = '#FFA9D4BD';
  static GreenDark10: string = '#FFC8E5D5';
  static RedLight1: string = '#FFFFE7E6';
  static RedLight2: string = '#FFFCC9C7';
  static RedLight3: string = '#FFFAAEAC';
  static RedLight4: string = '#FFF58989';
  static RedLight5: string = '#FFE86666';
  static RedLight6: string = '#FFE54545';
  static RedLight7: string = '#FFC93439';
  static RedLight8: string = '#FFAD2934';
  static RedLight9: string = '#FF8F222D';
  static RedLight10: string = '#FF6B1A27';
  static RedDark1: string = '#FF2B1C1F';
  static RedDark2: string = '#FF422324';
  static RedDark3: string = '#FF613234';
  static RedDark4: string = '#FF8A4242';
  static RedDark5: string = '#FFC2544E';
  static RedDark6: string = '#FFE6594C';
  static RedDark7: string = '#FFE57A6E';
  static RedDark8: string = '#FFF3A599';
  static RedDark9: string = '#FFFACBC3';
  static RedDark10: string = '#FFFAE4DE';
  static OrangeLight1: string = '#FFFFEEDB';
  static OrangeLight2: string = '#FFFFD6B2';
  static OrangeLight3: string = '#FFFFBE85';
  static OrangeLight4: string = '#FFFFA455';
  static OrangeLight5: string = '#FFFF8B2B';
  static OrangeLight6: string = '#FFFF7200';
  static OrangeLight7: string = '#FFE05D00';
  static OrangeLight8: string = '#FFBF4900';
  static OrangeLight9: string = '#FF8F370B';
  static OrangeLight10: string = '#FF662200';
  static OrangeDark1: string = '#FF211A19';
  static OrangeDark2: string = '#FF35231A';
  static OrangeDark3: string = '#FF462E1F';
  static OrangeDark4: string = '#FF653C21';
  static OrangeDark5: string = '#FF96562A';
  static OrangeDark6: string = '#FFE37F32';
  static OrangeDark7: string = '#FFE39552';
  static OrangeDark8: string = '#FFEEAD72';
  static OrangeDark9: string = '#FFF7CFA4';
  static OrangeDark10: string = '#FFF9E9D1';
  static Transparent: string = '#00FFFFFF';
  static AccentTurquoiseLight: string = '#FF00ABD6';
  static AccentPurpleLight: string = '#FF8157FF';
  static AccentMagentaLight: string = '#FFF5457F';
  static AccentOrangeLight: string = '#FFFF6A4C';
  static AccentTurquoiseDark: string = '#FF008FB2';
  static AccentPurpleDark: string = '#FF693CF0';
  static AccentMagentaDark: string = '#FFC22F56';
  static AccentOrangeDark: string = '#FFF25B35';
}

export default interface SemanticColorScheme {
  // text & icon
  textColorPrimary: string;
  textColorSecondary: string;
  textColorTertiary: string;
  textColorDisable: string;
  textColorButton: string;
  textColorButtonDisabled: string;
  textColorLink: string;
  textColorLinkHover: string;
  textColorLinkActive: string;
  textColorLinkDisabled: string;
  textColorAntiPrimary: string;
  textColorAntiSecondary: string;
  textColorWarning: string;
  textColorSuccess: string;
  textColorError: string;

  // background
  bgColorTopBar: string;
  bgColorOperate: string;
  bgColorDialog: string;
  bgColorDialogModule: string;
  bgColorEntryCard: string;
  bgColorFunction: string;
  bgColorBottomBar: string;
  bgColorInput: string;
  bgColorBubbleReciprocal: string;
  bgColorBubbleOwn: string;
  bgColorDefault: string;
  bgColorTagMask: string;
  bgColorElementMask: string;
  bgColorMask: string;
  bgColorMaskDisappeared: string;
  bgColorMaskBegin: string;
  bgColorAvatar: string;

  // border
  strokeColorPrimary: string;
  strokeColorSecondary: string;
  strokeColorModule: string;

  // shadow
  shadowColor: string;

  // status
  listColorDefault: string;
  listColorHover: string;
  listColorFocused: string;

  // button
  buttonColorPrimaryDefault: string;
  buttonColorPrimaryHover: string;
  buttonColorPrimaryActive: string;
  buttonColorPrimaryDisabled: string;
  buttonColorSecondaryDefault: string;
  buttonColorSecondaryHover: string;
  buttonColorSecondaryActive: string;
  buttonColorSecondaryDisabled: string;
  buttonColorAccept: string;
  buttonColorHangupDefault: string;
  buttonColorHangupDisabled: string;
  buttonColorHangupHover: string;
  buttonColorHangupActive: string;
  buttonColorOn: string;
  buttonColorOff: string;

  // dropdown
  dropdownColorDefault: string;
  dropdownColorHover: string;
  dropdownColorActive: string;

  // scrollbar
  scrollbarColorDefault: string;
  scrollbarColorHover: string;

  // floating
  floatingColorDefault: string;
  floatingColorOperate: string;

  // checkbox
  checkboxColorSelected: string;

  // toast
  toastColorWarning: string;
  toastColorSuccess: string;
  toastColorError: string;
  toastColorDefault: string;

  // tag
  tagColorLevel1: string;
  tagColorLevel2: string;
  tagColorLevel3: string;
  tagColorLevel4: string;

  // switch
  switchColorOff: string;
  switchColorOn: string;
  switchColorButton: string;

  // slider
  sliderColorFilled: string;
  sliderColorEmpty: string;
  sliderColorButton: string;

  // tab
  tabColorSelected: string;
  tabColorUnselected: string;
  tabColorOption: string;
}

class DefaultTheme implements SemanticColorScheme {
  // text & icon
  textColorPrimary: string = Colors.Black2;
  textColorSecondary: string = Colors.Black4;
  textColorTertiary: string = Colors.Black5;
  textColorDisable: string = Colors.Black6;
  textColorButton: string = Colors.White1;
  textColorButtonDisabled: string = Colors.White1;
  textColorLink: string = Colors.ThemeLight6;
  textColorLinkHover: string = Colors.ThemeLight5;
  textColorLinkActive: string = Colors.ThemeLight7;
  textColorLinkDisabled: string = Colors.ThemeLight2;
  textColorAntiPrimary: string = Colors.Black2;
  textColorAntiSecondary: string = Colors.Black4;
  textColorWarning: string = Colors.OrangeLight6;
  textColorSuccess: string = Colors.GreenLight6;
  textColorError: string = Colors.RedLight6;
  // background
  bgColorTopBar: string = Colors.GrayLight1;
  bgColorOperate: string = Colors.White1;
  bgColorDialog: string = Colors.White1;
  bgColorDialogModule: string = Colors.GrayLight2;
  bgColorEntryCard: string = Colors.GrayLight2;
  bgColorFunction: string = Colors.GrayLight2;
  bgColorBottomBar: string = Colors.White1;
  bgColorInput: string = Colors.GrayLight2;
  bgColorBubbleReciprocal: string = Colors.GrayLight2;
  bgColorBubbleOwn: string = Colors.ThemeLight2;
  bgColorDefault: string = Colors.GrayLight2;
  bgColorTagMask: string = Colors.White4;
  bgColorElementMask: string = Colors.Black6;
  bgColorMask: string = Colors.Black4;
  bgColorMaskDisappeared: string = Colors.White7;
  bgColorMaskBegin: string = Colors.White1;
  bgColorAvatar: string = Colors.ThemeLight2;
  // border
  strokeColorPrimary: string = Colors.GrayLight3;
  strokeColorSecondary: string = Colors.GrayLight2;
  strokeColorModule: string = Colors.GrayLight3;
  // shadow
  shadowColor: string = Colors.Black8;
  // status
  listColorDefault: string = Colors.White1;
  listColorHover: string = Colors.GrayLight1;
  listColorFocused: string = Colors.ThemeLight1;
  // button
  buttonColorPrimaryDefault: string = Colors.ThemeLight6;
  buttonColorPrimaryHover: string = Colors.ThemeLight5;
  buttonColorPrimaryActive: string = Colors.ThemeLight7;
  buttonColorPrimaryDisabled: string = Colors.ThemeLight2;
  buttonColorSecondaryDefault: string = Colors.GrayLight2;
  buttonColorSecondaryHover: string = Colors.GrayLight1;
  buttonColorSecondaryActive: string = Colors.GrayLight3;
  buttonColorSecondaryDisabled: string = Colors.GrayLight1;
  buttonColorAccept: string = Colors.GreenLight6;
  buttonColorHangupDefault: string = Colors.RedLight6;
  buttonColorHangupDisabled: string = Colors.RedLight2;
  buttonColorHangupHover: string = Colors.RedLight5;
  buttonColorHangupActive: string = Colors.RedLight7;
  buttonColorOn: string = Colors.White1;
  buttonColorOff: string = Colors.Black5;
  // dropdown
  dropdownColorDefault: string = Colors.White1;
  dropdownColorHover: string = Colors.GrayLight1;
  dropdownColorActive: string = Colors.ThemeLight1;
  // scrollbar
  scrollbarColorDefault: string = Colors.Black7;
  scrollbarColorHover: string = Colors.Black6;
  // floating
  floatingColorDefault: string = Colors.White1;
  floatingColorOperate: string = Colors.GrayLight2;
  // checkbox
  checkboxColorSelected: string = Colors.ThemeLight6;
  // toast
  toastColorWarning: string = Colors.OrangeLight1;
  toastColorSuccess: string = Colors.GreenLight1;
  toastColorError: string = Colors.RedLight1;
  toastColorDefault: string = Colors.ThemeLight1;
  // tag
  tagColorLevel1: string = Colors.AccentTurquoiseLight;
  tagColorLevel2: string = Colors.ThemeLight5;
  tagColorLevel3: string = Colors.AccentPurpleLight;
  tagColorLevel4: string = Colors.AccentMagentaLight;
  // switch
  switchColorOff: string = Colors.GrayLight4;
  switchColorOn: string = Colors.ThemeLight6;
  switchColorButton: string = Colors.White1;
  // slider
  sliderColorFilled: string = Colors.ThemeLight6;
  sliderColorEmpty: string = Colors.GrayLight3;
  sliderColorButton: string = Colors.White1;
  // tab
  tabColorSelected: string = Colors.ThemeLight2;
  tabColorUnselected: string = Colors.GrayLight2;
  tabColorOption: string = Colors.GrayLight3;
}

class LightSemanticScheme extends DefaultTheme {
}

class DarkSemanticScheme extends DefaultTheme {
  // text & icon
  override textColorPrimary: string = Colors.White2;
  override textColorSecondary: string = Colors.White4;
  override textColorTertiary: string = Colors.White6;
  override textColorDisable: string = Colors.White7;
  override textColorButton: string = Colors.White1;
  override textColorButtonDisabled: string = Colors.White5;
  override textColorLink: string = Colors.ThemeDark6;
  override textColorLinkHover: string = Colors.ThemeDark5;
  override textColorLinkActive: string = Colors.ThemeDark7;
  override textColorLinkDisabled: string = Colors.ThemeDark2;
  override textColorAntiPrimary: string = Colors.Black2;
  override textColorAntiSecondary: string = Colors.Black4;
  override textColorWarning: string = Colors.OrangeDark6;
  override textColorSuccess: string = Colors.GreenDark6;
  override textColorError: string = Colors.RedDark6;
  // background
  override bgColorTopBar: string = Colors.GrayDark1;
  override bgColorOperate: string = Colors.GrayDark2;
  override bgColorDialog: string = Colors.GrayDark2;
  override bgColorDialogModule: string = Colors.GrayDark3;
  override bgColorEntryCard: string = Colors.GrayDark3;
  override bgColorFunction: string = Colors.GrayDark4;
  override bgColorBottomBar: string = Colors.GrayDark3;
  override bgColorInput: string = Colors.GrayDark3;
  override bgColorBubbleReciprocal: string = Colors.GrayDark3;
  override bgColorBubbleOwn: string = Colors.ThemeDark7;
  override bgColorDefault: string = Colors.GrayDark1;
  override bgColorTagMask: string = Colors.Black4;
  override bgColorElementMask: string = Colors.Black6;
  override bgColorMask: string = Colors.Black4;
  override bgColorMaskDisappeared: string = Colors.Black8;
  override bgColorMaskBegin: string = Colors.Black2;
  override bgColorAvatar: string = Colors.ThemeDark2;
  // border
  override strokeColorPrimary: string = Colors.GrayDark4;
  override strokeColorSecondary: string = Colors.GrayDark3;
  override strokeColorModule: string = Colors.GrayDark5;
  // shadow
  override shadowColor: string = Colors.Black8;
  // status
  override listColorDefault: string = Colors.GrayDark2;
  override listColorHover: string = Colors.GrayDark3;
  override listColorFocused: string = Colors.ThemeDark2;
  // button
  override buttonColorPrimaryDefault: string = Colors.ThemeDark6;
  override buttonColorPrimaryHover: string = Colors.ThemeDark5;
  override buttonColorPrimaryActive: string = Colors.ThemeDark7;
  override buttonColorPrimaryDisabled: string = Colors.ThemeDark2;
  override buttonColorSecondaryDefault: string = Colors.GrayDark4;
  override buttonColorSecondaryHover: string = Colors.GrayDark3;
  override buttonColorSecondaryActive: string = Colors.GrayDark5;
  override buttonColorSecondaryDisabled: string = Colors.GrayDark3;
  override buttonColorAccept: string = Colors.GreenDark6;
  override buttonColorHangupDefault: string = Colors.RedDark6;
  override buttonColorHangupDisabled: string = Colors.RedDark2;
  override buttonColorHangupHover: string = Colors.RedDark5;
  override buttonColorHangupActive: string = Colors.RedDark7;
  override buttonColorOn: string = Colors.White1;
  override buttonColorOff: string = Colors.Black5;
  // dropdown
  override dropdownColorDefault: string = Colors.GrayDark3;
  override dropdownColorHover: string = Colors.GrayDark4;
  override dropdownColorActive: string = Colors.GrayDark2;
  // scrollbar
  override scrollbarColorDefault: string = Colors.White7;
  override scrollbarColorHover: string = Colors.White6;
  // floating
  override floatingColorDefault: string = Colors.GrayDark3;
  override floatingColorOperate: string = Colors.GrayDark4;
  // checkbox
  override checkboxColorSelected: string = Colors.ThemeDark5;
  // toast
  override toastColorWarning: string = Colors.OrangeDark2;
  override toastColorSuccess: string = Colors.GreenDark2;
  override toastColorError: string = Colors.RedDark2;
  override toastColorDefault: string = Colors.ThemeDark2;
  // tag
  override tagColorLevel1: string = Colors.AccentTurquoiseDark;
  override tagColorLevel2: string = Colors.ThemeDark5;
  override tagColorLevel3: string = Colors.AccentPurpleDark;
  override tagColorLevel4: string = Colors.AccentMagentaDark;
  // switch
  override switchColorOff: string = Colors.GrayDark4;
  override switchColorOn: string = Colors.ThemeDark5;
  override switchColorButton: string = Colors.White1;
  // slider
  override sliderColorFilled: string = Colors.ThemeDark5;
  override sliderColorEmpty: string = Colors.GrayDark5;
  override sliderColorButton: string = Colors.White1;
  // tab
  override tabColorSelected: string = Colors.GrayDark5;
  override tabColorUnselected: string = Colors.GrayDark4;
  override tabColorOption: string = Colors.GrayDark4;
}

export {
  SemanticColorScheme, DefaultTheme, LightSemanticScheme, DarkSemanticScheme
};